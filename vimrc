" An example for a vimrc file.
"
" Maintainer:	Bram Moolenaar <Bram@vim.org>
" Last change:	2006 Nov 16
"
" To use it, copy it to
"     for Unix and OS/2:  ~/.vimrc
"	      for Amiga:  s:.vimrc
"  for MS-DOS and Win32:  $VIM\_vimrc
"	    for OpenVMS:  sys$login:.vimrc

" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

if has("vms")
  set nobackup		" do not keep a backup file, use versions instead
else
  set backup		" keep a backup file
endif
set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set incsearch		" do incremental searching

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &guioptions = substitute(&guioptions, "t", "", "g")

" Don't use Ex mode, use Q for formatting
map Q gq

" In many terminal emulators the mouse works just fine, thus enable it.
set mouse=a

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" Clear last search highlight
map <silent> <C-N> :let @/=""<CR>

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype on
  filetype plugin on
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 80 characters.
  autocmd FileType text setlocal textwidth=80

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  autocmd BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

else

  set autoindent		" always set autoindenting on

endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis
	 	\ | wincmd p | diffthis

" PARTIE PERSO

set nu

set tabstop=2
set shiftwidth=2

" filetype plugin indent on

set showmatch

set backspace=2

set expandtab

" autocmd FileType omlet set indentkeys+=,!^I

" VIM-LATEX

" IMPORTANT: grep will sometimes skip displaying the file name if you
" search in a singe file. This will confuse latex-suite. Set your grep
" program to alway generate a file-name.
set grepprg=grep\ -nH\ $*

" VimCommander
"noremap <silent> <F12> :cal VimCommanderToggle()<CR>
" Netrw is better
noremap <silent> <F12> :Ex<CR>

" Taglist
noremap <silent> <F11> :TlistToggle<CR> 

" Raccourci pour naviger entre les buffers
" passe au buffer suivant en mode normal
nmap <silent> <tab> :bn<CR>
nmap <silent> <S-tab> : b#<CR>
" delete le buffer courant et passe au buffer precedent
nmap <silent> <C-tab> :bd<CR>

"Specify that a dark terminal background is being used.
set bg=dark
colorscheme desert

" higlight cursor line
set cursorline
highlight CursorLine guibg=#001000

set foldmethod=syntax

" backup directory where the '*~' files generated by vim are stored
" set backupdir=~/backups/vim_backups

" autom. search for 'tags' files in the file tree: might slow down a lot
set tags=tags
";$HOME/scripts

"set wm=3

" launch Google search on highlighted word with vg
"vmap g :<C-U>!firefox "http://www.google.fr/search?hl=en&q=<cword>" >& /dev/null<CR><CR>


" launch Wikipedia search on highlighted word with vw
"vmap w :<C-U>!firefox "http://en.wikipedia.org/wiki/<cword>" >& /dev/null<CR><CR>

let mapleader = ","
let g:tex_flavor = 'latex'
set grepprg=grep\ -nH\ $*

set modeline

let g:Tex_DefaultTargetFormat='pdf'
let g:Tex_MultipleCompileFormats='pdf'

" Insert line above and below without entering insert mode
map <S-Enter> O<Esc>
map <CR> o<Esc>

" Python code completion with PySmell
autocmd FileType python setlocal omnifunc=pysmell#Complete
